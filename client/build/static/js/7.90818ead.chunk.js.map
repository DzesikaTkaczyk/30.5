{"version":3,"sources":["components/common/HtmlBox/HtmlBox.js","components/common/Button/Button.js","components/features/PostSummary/cutText.js","components/common/SmallTitle/SmallTitle.js","components/features/PostSummary/PostSummary.js","components/features/PostsList/PostsList.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/common/PageTitle/PageTitle.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js"],"names":["HtmlBox","children","otherProps","className","ReactHtmlParser","Button","variant","cutText","content","maxLength","length","substr","lastIndexOf","SmallTitle","PostSummary","id","title","author","to","PostsList","posts","map","post","key","Pagination","props","changePage","newPage","onPageChange","setState","presentPage","state","initialPage","pages","this","onClick","Array","el","page","React","Component","Posts","loadPostsPage","loadPostsByPage","postsPerPage","request","pagination","pending","success","error","Spinner","Alert","defaultProps","connect","getPosts","getRequest","getPages","getPresentPage","dispatch","loadPostsByPageRequest","resetRequest","HomePage","PageTitle","animationIn","animationOut","icon"],"mappings":"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","file":"static/js/7.90818ead.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst HtmlBox = ({ children, ...otherProps }) => (\r\n  <p {...otherProps} className=\"html-box\">\r\n    {ReactHtmlParser(children)}\r\n  </p>\r\n);\r\n\r\nHtmlBox.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default HtmlBox;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nconst cutText = (content, maxLength) => {\r\n  if (maxLength < 1) return 'Error';\r\n  if (content.length <= maxLength) return content;\r\n  return content.substr(0, content.lastIndexOf(' ', maxLength)) + '...';\r\n}; \r\n\r\nexport default cutText;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    { children }\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SmallTitle;\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport './PostSummary.scss';\r\nimport cutText from './cutText';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport Button from '../../common/Button/Button';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\n\r\nconst PostSummary = ({ id, title, author, content }) => (\r\n  <article className=\"post-summary\">\r\n    <SmallTitle>{title}</SmallTitle>\r\n    <p>Author: {author}</p>\r\n    <HtmlBox>{cutText(content, 250)}</HtmlBox>\r\n    <Button variant=\"primary\">\r\n      <Link to={`/posts/${id}`}>Read more</Link>\r\n    </Button>\r\n  </article>\r\n);\r\n\r\nPostSummary.propTypes = {\r\n  id: PropTypes.string,\r\n  title: PropTypes.string,\r\n  author: PropTypes.string,\r\n  content: PropTypes.string,\r\n};\r\n\r\nexport default PostSummary;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport PostSummary from '../PostSummary/PostSummary';\r\n\r\nconst PostsList = ({ posts }) => (\r\n  <div>\r\n    <section className=\"posts-list\">\r\n      {posts.map(post => <PostSummary key={post.id} {...post} />)}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nPostsList.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default PostsList;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport './Pagination.scss';\r\n\r\nclass Pagination extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      presentPage: this.props.initialPage || 1\r\n    };\r\n  }\r\n\r\n  changePage = (newPage) => {\r\n    const { onPageChange } = this.props;\r\n\r\n    this.setState({ presentPage: newPage });\r\n    onPageChange(newPage);\r\n  }\r\n\r\n  render() {\r\n    const { pages } = this.props;\r\n    const { presentPage } = this.state;\r\n    const { changePage } = this;\r\n    const gt = '>'\r\n    const lt = '<'\r\n\r\n    return (\r\n      <div className=\"pagination\">\r\n        <ul className=\"pagination__list\">\r\n          {presentPage > 1 ? (\r\n          \t<li className='pagination__list__item' onClick={() => changePage(presentPage - 1) }>\r\n          \t  {lt}\r\n          \t</li>\r\n          ) : ( '' )}\r\n\r\n          {[...Array(pages)].map((el, page) => (\r\n          <li\r\n            key={++page}\r\n            onClick={() => { changePage(page) }}\r\n            className={`pagination__list__item${\r\n            \tpage === presentPage ? ' pagination__list__item--active' : ''}`}\r\n          >\r\n            {page}\r\n          </li>\r\n          ))}\r\n\r\n          {presentPage === pages && pages !== 0 ? ('') : (\r\n          \t<li className=\"pagination__list__item\" onClick={() => changePage(presentPage + 1)}>\r\n          \t  {gt}\r\n          \t</li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  pages: PropTypes.number.isRequired,\r\n  initialPage: PropTypes.number,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport PostsList from '../PostsList/PostsList';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Pagination from '../../common/Pagination/Pagination';\r\n\r\nclass Posts extends React.Component {\r\n  componentDidMount() {\r\n    const { loadPostsByPage, initialPage, postsPerPage } = this.props;\r\n    loadPostsByPage(initialPage || 1, postsPerPage);\r\n  }\r\n\r\n  loadPostsPage = (page) => {\r\n    const { loadPostsByPage, postsPerPage } = this.props;\r\n    loadPostsByPage(page, postsPerPage);\r\n  }\r\n\r\n  render() {\r\n    const { posts, request, pages, pagination, presentPage } = this.props;\r\n    const pending = request.pending;\r\n    const success = request.success;\r\n    const error = request.error;\r\n    const { loadPostsPage } = this;\r\n\r\n    return (\r\n      <div>\r\n        {(pending === true || success === null) && <Spinner />}\r\n        {pending === false && success === true && posts.length > 0 && pagination === true &&\r\n          <div>\r\n            <PostsList posts={posts} />\r\n            <Pagination pages={pages} onPageChange={loadPostsPage} initialPage={presentPage} />\r\n          </div>}\r\n        {pending === false && success === true && posts.length > 0 && pagination === false &&\r\n          <div><PostsList posts={posts} /></div>}\r\n        {pending === false && error !== null  && <Alert variant='error'>Connect error</Alert>}\r\n        {pending === false && success === true && posts.length === 0 && <Alert variant='info'>No posts</Alert>}\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nPosts.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  loadPostByPage: PropTypes.func.isRequired,\r\n  resetRequest: PropTypes.func.isRequired,\r\n};\r\n\r\nPosts.defaultProps = {\r\n  initialPage: 1,\r\n  postsPerPage: 10,\r\n  pagination: true,\r\n};\r\n\r\nexport default Posts;","import { connect } from 'react-redux';\r\nimport { getPosts, getRequest, resetRequest, loadPostsByPageRequest, getPages, getPresentPage } from '../../../redux/postsRedux';\r\nimport Posts from './Posts';\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: getPosts(state),\r\n  request: getRequest(state),\r\n  pages: getPages(state),\r\n  presentPage: getPresentPage(state)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPostsByPage: (page, postsPerPage) => dispatch(loadPostsByPageRequest(page, postsPerPage)),\r\n  resetRequest: () => dispatch(resetRequest())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","import React from 'react';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst HomePage = () => (\r\n\t<div>\r\n\t\t<PageTitle>Blog</PageTitle>\r\n\t\t<Posts postsPerPage={3} pagination={false} />\r\n\t</div>\r\n);\r\n\r\nexport default HomePage;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n"],"sourceRoot":""}